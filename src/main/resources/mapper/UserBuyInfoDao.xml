<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.back.dao.UserBuyInfoDao">

    <resultMap type="com.back.entity.UserBuyInfo" id="UserBuyInfoMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="inventoryid" column="inventoryid" jdbcType="VARCHAR"/>
        <result property="branddept" column="branddept" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="INTEGER"/>
        <result property="version" column="version" jdbcType="INTEGER"/>
        <result property="deleted" column="deleted" jdbcType="INTEGER"/>
        <result property="gmtCreate" column="gmt_create" jdbcType="TIMESTAMP"/>
        <result property="gmtModified" column="gmt_modified" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into hello.user_buy_info(inventoryid, branddept, phone, state, version, deleted, gmt_create, gmt_modified)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.inventoryid}, #{entity.branddept}, #{entity.phone}, #{entity.state}, #{entity.version}, #{entity.deleted}, #{entity.gmtCreate}, #{entity.gmtModified})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into hello.user_buy_info(inventoryid, branddept, phone, state, version, deleted, gmt_create, gmt_modified)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.inventoryid}, #{entity.branddept}, #{entity.phone}, #{entity.state}, #{entity.version}, #{entity.deleted}, #{entity.gmtCreate}, #{entity.gmtModified})
        </foreach>
        on duplicate key update
         inventoryid = values(inventoryid) , branddept = values(branddept) , phone = values(phone) , state = values(state) , version = values(version) , deleted = values(deleted) , gmt_create = values(gmt_create) , gmt_modified = values(gmt_modified)     </insert>
    <select id="getDeleteUserInfo" resultType="com.back.entity.UserBuyInfo">
        select * from hello.user_buy_info where deleted=1
    </select>

    <delete id="deleteReallyById" parameterType="Integer">
        delete from hello.user_buy_info where id=#{id}
    </delete>

</mapper>

